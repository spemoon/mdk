define(function(require, exports, module) {
    seajs.config({
        /*----------------------------------------------------------------------------------------
         * 简化路径配置
         * 满足 jquery/1.7.2/jquery 这种格式时候可以简化为
         *      jquery: '1.7.2'
         * 暂时不用，对于sea-config会导致问题
         *---------------------------------------------------------------------------------------*/
        alias: {
            jquery: 'jquery/1.7.2/jquery'
        },

        /*----------------------------------------------------------------------------------------
         * 在普通模块加载前，提前加载并初始化好指定模块
         *---------------------------------------------------------------------------------------*/
        preload: [
            // Function.prototype.bind ? '' : 'es5-safe',
            // this.JSON ? '' : 'json'
        ],

        /*----------------------------------------------------------------------------------------
         * 调试选项：
         *     true 时，加载器会使用 console.log 输出所有错误和调试信息
         *     默认为 false, 只输出关键信息
         *     debug 值设为 2 . 这种情况下， 每个脚本请求都会加上唯一时间戳
         *     这在测试期间很有用，可以强制浏览器每次都请求最新版本，免去 Ctrl + F5 之烦恼
         *---------------------------------------------------------------------------------------*/
        debug: 2,

        /*----------------------------------------------------------------------------------------
         * 文件映射，用于线上调试，规则如下：
         * 一般是一个二元数组表示一个替换规则，前者为线上资源，后者为自己的资源
         * 也可以是一个函数
         * 实例：
         *     简单方式：
         *         将线上http://seajs.org/docs/assets/的请求都映射到本地
         *         [
         *             'http://seajs.org/docs/assets/',
         *             'http://localhost/~lifesinger/seajs/seajs/docs/assets/'
         *         ]
         *     正则方式：
         *         将所有js结尾的文件替换为-debug.js结尾
         *         [
         *             /^(.*)\.js$/i,
         *             '$1-debug\.js'
         *         ]
         *     函数方式：
         *         return的是替换后的资源
         *         function(url) {
         *             if (url.indexOf('aaa/xxx') > 0) {
         *                 url = url.replace('aaa', 'bbb');
         *             }
         *             return url;
         *         }
         *
         * 开启调试在url后面加入：?seajs-debug 则开启map面板，输入框里填入本地规则文件，文件内容大致如下：
         *     define(function(require, exports, module) {
         *         var rules = [];
         *         rules.push(....); // 上面的规则方式
         *         seajs.config({'map': rules});
         *     });
         * 点击Refresh，规则生效，则开始使用本地资源调试
         *
         * IE情况下使用 ?seajs-debug&firebug-lite 在map插件基础上，还开启了firebug-lite
         *---------------------------------------------------------------------------------------*/
        map: [
            [ /^(.*\.(?:css|js))(.*)$/i, '$1?20120810' ]
        ],

        /*----------------------------------------------------------------------------------------
         * 顶级标识，默认是sea.js的目录
         * 建议不要改变 base 的默认值
         *---------------------------------------------------------------------------------------*/
        // base: '',

        /*----------------------------------------------------------------------------------------
         * 获取模块文件时，<script> 或 <link> 标签的 charset 属性。 默认是 utf-8
         * charset 配置项还支持 function 类型：
         *     function(url) {
         *         // xxx 目录下的文件用 gbk 编码加载
         *         if (url.indexOf('http://example.com/js/xxx') === 0) {
         *             return 'gbk';
         *         }
         *         // 其他文件用 utf-8 编码
         *         return 'utf-8';
         *     }
         *---------------------------------------------------------------------------------------*/
        charset: 'utf-8'
    });
});